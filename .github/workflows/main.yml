name: Proyecto

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Clean up previous containers (if any)
        run: |
          echo "Limpiando contenedores previos..."
          docker compose down --volumes --remove-orphans || true

      - name: Build and run containers
        run: |
          echo "Levantando servicios..."
          docker compose up -d
          
      - name: Esperar que SQL Server esté listo
        run: |
          echo "Esperando que SQL Server esté listo en el puerto 1433..."
          for i in {1..30}; do
            nc -z localhost 1433 && echo "SQL Server está listo" && exit 0
            echo "Esperando... intento $i"
            sleep 5
          done
          echo "SQL Server no respondió a tiempo" && exit 1

      - name: Mostrar logs de SQL Server
        run: docker logs sqlserver

      - name: Mostrar logs de Flask
        run: docker logs flask

      - name: Verificar conexión a SQL Server
        run: |
          echo "Probando conexión a SQL Server..."
          docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q "SELECT @@VERSION"

      # Aquí podrías agregar tus pruebas de integración
      # - name: Run tests
      #   run: pytest tests/

      - name: Tear down containers
        if: always()  # Esto asegura que siempre se limpien los recursos
        run: |
          echo "Apagando contenedores..."
          docker compose down --volumes --remove-orphans
